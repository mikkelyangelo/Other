Алгоритм работы программы:
1.	Клиент получает IP-адрес по символическому имени узла сети (gethostbyname).
2.	Клиент подключается (connect) с временного порта и посылает запрос на порт сервера номер 21.
3.	Сервер отвечает (recieve) на временный порт клиента.
4.	Клиент последовательно посылает логин и пароль, получая подтверждения от сервера.
5.	Клиент посылает команду TYPE, устанавливая режим передачи в 8- битный.
6.	Клиент отправляет команду PASV, которая говорит об использовании пассивного режима FTP.
7.	Сервер подтверждает работу в пассивном режиме, посылает свой IP-адрес, а также номер порта для установки соединения для передачи данных, к которому подключится клиент.
8.	С порта для передачи данных клиент посылает запрос на установку соединения на выданный сервером порт.
9.	Сервер подтверждает установку соединения. 10.Клиент устанавливает соединение.
11.	Клиент задает команды серверу (с управляющего порта на порт 21), после чего возможна передача данных.
12.	Клиент отправляет файл с помощью команды STOR. 13.Сервер подтверждает передачу файла.
 
Отправка файла. Из пути к файлу (путь задается аргументом argv[4]) выделяется базовое имя. Базовое имя записывается в переменную base. Если файл не лежит в одной директории с исполняемым файлом программы (base != argv[4]), создается временная копия файла с помощью функции cp(to, from).
Функция создает файл с именем, переданным в качестве аргумента “to” и записывает в него содержимое файла, имя которого было передано в качестве аргумента “from”.
В массив символов dest записывается конечный путь к файлу на сервере, состоящий из заранее заданного префикса и базового имени файла. Файл (или его временная копия) затем отправляется на сервер с помощью команды STOR. Содержимое файла (или временного файла) частями заносится в буфер fbuf, который потом передается по сокету sock2. Когда передан весь файл, сокет 2 закрывается. При получении подтверждения от сервера выводится информационное сообщение. Временный файл, если был создан, удаляется.
